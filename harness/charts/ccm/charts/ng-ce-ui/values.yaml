# Default values for ng-ce-ui
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

probes:
  readinessProbe:
    httpGet:
      path: /health
      port: ng-ce-ui-port
    initialDelaySeconds: 15
    periodSeconds: 10
  livenessProbe:
    httpGet:
      path: /health
      port: ng-ce-ui-port
    initialDelaySeconds: 100
    periodSeconds: 20
    failureThreshold: 2
global:
  autoscaling:
    enabled: false
  pdb:
    create: false
  loadbalancerURL: "https://test"
  commonAnnotations: {}
  commonLabels: {}
  ingress:
    enabled: false
    disableHostInIngress: false
    pathPrefix: ""
    pathType: ""
    className: harness
    hosts:
      - my-host.example.org
    tls:
      enabled: true
      secretName: ""
    objects:
      annotations: {}
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways:
      hosts:
  # image pull secrets to use for every image
  imagePullSecrets: []
replicaCount: 2
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 0
image:
  registry: docker.io
  repository: harness/ng-ce-ui
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.43.5"
  digest: "sha256:20e3bc522df2027eeed49f140cf274b8a994fdfebcdb59d71fc9081325532fc4"
  # image pull secrets to use for ng-ce-ui image
  imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: false
  annotations: {}
  name: "harness-default"
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  annotations: {}
  type: ClusterIP
  port: 80
  portName: ng-ce-ui-port
virtualService:
  annotations: {}
  objects:
    - pathMatchType: prefix
      pathRewrite: "/"
      paths:
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/ccmui/'
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/ccmui'
ingress:
  annotations: {}
  className: nginx
  objects:
    - annotations:
        nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      paths:
        - path: '{{ .Values.global.ingress.pathPrefix }}/ccmui(/|$)(.*)'
autoscaling:
  enabled: false
  targetCPU: ""
  targetMemory: ""
nodeSelector: {}
tolerations: []
affinity: {}
resources:
  limits:
    memory: "512Mi"
  requests:
    cpu: 1
    memory: "512Mi"
# extraVolumes:
#   - name: volume-test
#     configMap:
#       name: test-config
#       # readOnly: true
extraVolumes: []
# extraVolumeMounts:
#   - name: volume-test
#     mountPath: /opt/harness/config
extraVolumeMounts: []
lifecycleHooks: {}
# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command:
config:
  ENABLE_CDN: "false"
rbac:
  rules: []
pdb:
  create: false
terminationGracePeriodSeconds: 30
