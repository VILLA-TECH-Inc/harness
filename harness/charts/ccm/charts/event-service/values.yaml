# Default values for nextgen-ce
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  pdb:
    create: false
  autoscaling:
    enabled: false
  commonAnnotations: {}
  commonLabels: {}
  loadbalancerURL: "https://test"
  monitoring:
    enabled: false
    port: 8889
    managedPlatform: ""
    path: /metrics
  database:
    postgres:
      ## - installed = true if installed within cluster
      installed: true
      ## - protocol to use for connection
      protocol: postgres
      ## - host array for external
      hosts:
        - postgres:5432
      ## - secret name containing external values
      secretName: ""
      ## - key within secret containing username
      userKey: ""
      ## - key within secret containing password
      passwordKey: ""
      ## - extra arguments set to connection string
      extraArgs: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts:
        - dummy.net
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    timescaledb:
      installed: true
      protocol: "jdbc:postgresql"
      # --  provide default values if mongo.installed is set to false
      hosts:
        - timescaledb-single-chart:5432
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
    clickhouse:
      enabled: false
  ingress:
    enabled: false
    disableHostInIngress: false
    pathPrefix: ""
    pathType: ""
    className: harness
    hosts:
      - events-grpc-app.harness.io
    tls:
      enabled: true
      secretName: ''
    objects:
      annotations: {}
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways:
      hosts:
  # image pull secrets to use for every image
  imagePullSecrets: []
  stackDriverLoggingEnabled: false
  waitForInitContainer:
    enabled: true
    image:
      registry: docker.io
      repository: harness/helm-init-container
      pullPolicy: Always
      tag: "latest"
      digest: "sha256:c06cab15920d2f99a000f913316a76cd867c73fc8d7b2e68ba4851b39e64aa97"
      # image pull secrets to use for helm-init-container image
      imagePullSecrets: []
  fileLogging:
    enabled: false
    logFilename: /opt/harness/logs/pod.log
    maxFileSize: 50MB
    maxBackupFileCount: 10
    totalFileSizeCap: 1GB
replicaCount: 1
maxSurge: 100%
maxUnavailable: 0
java:
  memory: 1024
image:
  registry: docker.io
  repository: harness/event-service-signed
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.12.4"
  digest: "sha256:c68822b145ec9688babd0ff8ecc62f530a70492e72e4de3f748b83c6b4328ee8"
  # image pull secrets to use for event-service image
  imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
ngServiceAccount: "test"
redislabsCATruststore: "test"
defaultInternalImageConnector: "test"
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  annotations: {}
  type: ClusterIP
  port: 7280
  port2: 9889
ingress:
  className: nginx
  annotations: {}
  objects:
    - annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /ccmevent$1$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      paths:
        - path: '{{ .Values.global.ingress.pathPrefix }}/ccmevent(/|$)(.*)'
resources:
  limits:
    memory: "1840Mi"
  requests:
    cpu: "512m"
    memory: "1840Mi"
database:
  mongo:
    events:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    harness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    dmsharness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
timescaledb:
  enabled: false
  # -- TimescaleDB host names
  hosts: []
  # -- Enable TimescaleDB SSL
  #  sslEnabled: false
  # -- TimescaleDB secrets
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          TIMESCALEDB_USERNAME: ""
          TIMESCALEDB_PASSWORD: ""
          TIMESCALEDB_SSL_ROOT_CERT: ""
    secretManagement:
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            TIMESCALEDB_USERNAME:
              name: ""
              property: ""
            TIMESCALEDB_PASSWORD:
              name: ""
              property: ""
            TIMESCALEDB_SSL_ROOT_CERT:
              name: ""
              property: ""
autoscaling:
  enabled: false
  targetCPU: ""
  targetMemory: ""
nodeSelector: {}
tolerations: []
affinity: {}
additionalConfigs: {}
java17flags: "--illegal-access=debug --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.math=ALL-UNNAMED --add-opens java.base/java.nio.file=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED --add-opens java.xml/com.sun.org.apache.xpath.internal=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens java.base/java.text=ALL-UNNAMED --add-exports java.xml/com.sun.org.apache.xerces.internal.parsers=ALL-UNNAMED --add-exports java.base/sun.nio.ch=ALL-UNNAMED"
# extraVolumes:
#   - name: volume-test
#     configMap:
#       name: test-config
#       # readOnly: true
extraVolumes: []
# extraVolumeMounts:
#   - name: volume-test
#     mountPath: /opt/harness/config
extraVolumeMounts: []
lifecycleHooks: {}
# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command:

virtualService:
  annotations: {}
  objects:
    - pathMatchType: prefix
      pathRewrite: "/ccmevent"
      paths:
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/ccmevent'
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/ccmevent/'
config:
  STACK_DRIVER_LOGGING_ENABLED: '{{ .Values.global.stackDriverLoggingEnabled }}'
  MEMORY: '{{ .Values.java.memory }}'
  LOGGING_LEVEL: INFO
  MONGO_INDEX_MANAGER_MODE: AUTO
  EVEMTS_MONGO_INDEX_MANAGER_MODE: AUTO
  DEPLOY_MODE: KUBERNETES_ONPREM
pdb:
  create: false
rbac:
  rules: []
