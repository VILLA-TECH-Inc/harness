# Default values for chaos-web
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  autoscaling:
    enabled: false
  pdb:
    create: false
  loadbalancerURL: "test@harness.io"
  commonAnnotations: {}
  commonLabels: {}
  monitoring:
    enabled: false
    managedPlatform: ""
    port: 8889
    path: /metrics
  cd:
    # -- Enable to install CD
    enabled: true
  istio:
    enabled: false
    gateway:
      create: true
      port: 443
      protocol: HTTPS
    hosts:
      - '*'
    strict: true
    tls:
      credentialName: ""
    virtualService:
      hosts:
        - ''
      gateways: []
  # Enable if using ingress objects
  ingress:
    enabled: false
    loadBalancerIP: '0.0.0.0'
    className: "harness"
    loadBalancerEnabled: true
    hosts:
      - ''
    tls:
      enabled: false
      secretName: harness-ssl
    nginx:
      # -- Create Nginx Controller.  True will deploy a controller into your cluster
      create: true
    defaultbackend:
      # -- Create will deploy a default backend into your cluster
      create: true
    objects:
      annotations: {}
    disableHostInIngress: false
    pathPrefix: ""
    pathType: ""
## Platform Settings
platform:
  harness-manager:
    featureFlags:
      OPA: "OPA_PIPELINE_GOVERNANCE"
      ADDITIONAL: "CHAOS_ENABLED"
replicaCount: 1
maxSurge: 1
maxUnavailable: 0
image:
  registry: docker.io
  repository: harness/smp-chaos-web-signed
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.57.1"
  digest: "sha256:0020765c3714e62b77cbd8a48e532b3ead200fe99137746379fbcec0e1e28039"
  #imagePullSecrets: ["chaos-regcred-secret"]
config:
  ENABLE_CDN: 'false'
configmap: {}
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
#runAsUser: 65534
#runAsNonRoot: true
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  annotations: {}
  type: ClusterIP
  port: 8184
  targetport: 8184
virtualService:
  annotations: {}
  objects:
    - pathMatchType: prefix
      pathRewrite: "/"
      paths:
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/chaos/'
          backend:
            service:
              name: chaos-web-service
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/chaos'
          backend:
            service:
              name: chaos-web-service
ingress:
  objects:
    - name: chaos-web
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
        nginx.ingress.kubernetes.io/use-regex: "true"
      paths:
        - path: '{{ .Values.global.ingress.pathPrefix }}/chaos(/|$)(.*)'
          backend:
            service:
              name: chaos-web-service
resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi
autoscaling:
  enabled: false
  targetCPU: ""
  targetMemory: ""
nodeSelector: {}
tolerations: []
affinity: {}
# extraVolumes:
#   - name: volume-test
#     configMap:
#       name: test-config
#       # readOnly: true
extraVolumes: []
# extraVolumeMounts:
#   - name: volume-test
#     mountPath: /opt/harness/config
extraVolumeMounts: []
lifecycleHooks: {}
# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command:
pdb:
  create: false
