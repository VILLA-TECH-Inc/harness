# Default values for change-data-capture
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets
# --global.imageRegistry Global Docker image registry
# --global.imagePullSecrets Global Docker registry secret names as an array
# --global.storageClass Global StorageClass for Persistent Volume(s)
global:
  commonAnnotations: {}
  commonLabels: {}
  kubeVersion: ""
  loadbalancerURL: ""
  stackDriverLoggingEnabled: false
  monitoring:
    enabled: false
    port: 8889
    managedPlatform: ""
    path: /metrics
  database:
    postgres:
      ## - installed = true if installed within cluster
      installed: true
      ## - protocol to use for connection
      protocol: postgres
      ## - host array for external
      hosts:
        - postgres:5432
      ## - secret name containing external values
      secretName: ""
      ## - key within secret containing username
      userKey: ""
      ## - key within secret containing password
      passwordKey: ""
      ## - extra arguments set to connection string
      extraArgs: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    timescaledb:
      installed: true
      protocol: "jdbc:postgresql"
      # --  provide default values if mongo.installed is set to false
      hosts:
        - timescaledb-single-chart:5432
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      certName: ""
      certKey: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              TIMESCALEDB_USERNAME: ""
              TIMESCALEDB_PASSWORD: ""
              TIMESCALEDB_SSL_ROOT_CERT: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                TIMESCALEDB_USERNAME:
                  name: ""
                  property: ""
                TIMESCALEDB_PASSWORD:
                  name: ""
                  property: ""
                TIMESCALEDB_SSL_ROOT_CERT:
                  name: ""
                  property: ""
  ha: false
  imagePullSecrets: []
  waitForInitContainer:
    ## image version
    ## ref: https://hub.docker.com/r/harness/helm-init-container/tags
    # --image.registry ; image registry
    # --image.repository ; image repository
    # --image.tag ; image tag (immutable tags are recommended)
    # --image.digest ; image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    # --image.pullPolicy Image pull policy
    # --image.imagePullSecrets Specify docker-registry secret names as an array
    image:
      registry: docker.io
      repository: harness/helm-init-container
      pullPolicy: Always
      tag: "latest"
      digest: "sha256:b8cb03089a08ff78bd59f9bdb29c9a0987517314e6f2245640d242345b9428dd"
      imagePullSecrets: []
    resources:
      limits:
        memory: 128Mi
      requests:
        cpu: 128m
        memory: 128Mi
    containerSecurityContext:
      runAsUser: 65534
      runAsNonRoot: true
    enabled: true
  fileLogging:
    enabled: false
    logFilename: /opt/harness/logs/pod.log
    maxFileSize: 50MB
    maxBackupFileCount: 10
    totalFileSizeCap: 1GB
  ingress:
    # -- create ingress objects
    enabled: false
    # -- set ingress object classname
    className: harness
    # -- set host of ingressObjects
    hosts:
      - my-host.example.org
    # -- set tls for ingress objects
    tls:
      enabled: true
      secretName: ''
    # -- add annotations to ingress objects
    objects:
      annotations: {}
    disableHostInIngress: false
    pathPrefix: ""
    pathType: ""
  istio:
    # -- create virtualServices objects
    enabled: false
    enableRegexRoutes: false
    # -- create gateway and use in virtualservice
    gateway:
      create: false
    # -- if gateway not created, use specified gateway and host
    virtualService:
      pathPrefix: ""
      gateways:
      hosts:
timescaledb:
  # -- TimescaleDB host names
  hosts: []
  # -- Enable TimescaleDB SSL
  # sslEnabled: false
  # -- TimescaleDB secrets
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          TIMESCALEDB_USERNAME: ""
          TIMESCALEDB_PASSWORD: ""
          TIMESCALEDB_SSL_ROOT_CERT: ""
    secretManagement:
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            TIMESCALEDB_USERNAME:
              name: ""
              property: ""
            TIMESCALEDB_PASSWORD:
              name: ""
              property: ""
            TIMESCALEDB_SSL_ROOT_CERT:
              name: ""
              property: ""
database:
  mongo:
    harness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "readPreference=secondary"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    events:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "readPreference=secondary"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    pmsharness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "readPreference=secondary"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    changedatacapture:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "retryWrites=true"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    ngharness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "readPreference=secondary"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    cvngharness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "readPreference=secondary"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    harnesschaos:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "readPreference=secondary"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    sscaharness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: "readPreference=secondary"
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
# -- deployment.updateStrategy.type Deployment strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#update-strategies
## e.g:
updateStrategy:
  type: Recreate
# -- schedulerName Specifies the schedulerName, if it's nil uses kube-scheduler
## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
# -- terminationGracePeriodSeconds In seconds, time the given to the pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: "180"
# -- splitDeployment.enabled, should CDC have multiple deployments to spread load
splitDeployment:
  enabled: false
## image version
## ref: https://hub.docker.com/r/harness/accesscontrol-service-signed/tags
# --image.registry ; image registry
# --image.repository ; image repository
# --image.tag ; image tag (immutable tags are recommended)
# --image.digest ; image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
# --image.pullPolicy Image pull policy
# --image.imagePullSecrets Specify docker-registry secret names as an array
image:
  registry: docker.io
  repository: harness/cdcdata-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.41.3"
  digest: "sha256:9e456ae754f569c45b7a09cce8988f1ab1381439982a844ef5ef35c6a7bc9eaa"
  imagePullSecrets: []
# -- Configurations for Harness application
config:
  DEPLOY_MODE: "KUBERNETES"
  MEMORY: "2048"
  MONGO_TAG_NAME: "none"
  MONGO_TAG_VALUE: "none"
## -- mongo secrets reference passed to the application
##
mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password
## -- timescaleDB secrets reference passed to the application
##
timescaleSecret:
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword
# --nameOverride String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""
# --fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: ""
## Specifies whether a ServiceAccount should be created
##
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
# -- provisioning.podAnnotations Provisioning Pod annotations.
##
podAnnotations: {}
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param provisioning.podSecurityContext.enabled Enable pod Security Context
## @param provisioning.podSecurityContext.fsGroup Group ID for the container
##
# e.g.:
## fsGroup: 2000
podSecurityContext: {}
# -- containerSecurityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param provisioning.containerSecurityContext.enabled Enable container Security Context
## @param provisioning.containerSecurityContext.runAsUser User ID for the container
## @param provisioning.containerSecurityContext.runAsNonRoot Avoid running as root User
##
containerSecurityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
## Configure extra options for liveness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
# -- livenessProbe.enabled Enable livenessProbe
# -- livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
# -- livenessProbe.periodSeconds Period seconds for livenessProbe
# -- livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
# -- livenessProbe.failureThreshold Failure threshold for livenessProbe
# -- livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 10
## Configure extra options for readiness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
# -- readinessProbe.enabled Enable readinessProbe
# -- readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
# -- readinessProbe.periodSeconds Period seconds for readinessProbe
# -- readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
# -- readinessProbe.failureThreshold Failure threshold for readinessProbe
# -- readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 2
## Configure extra options for startupProbe probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
# -- startupProbe.enabled Enable startupProbe
# -- startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
# -- startupProbe.periodSeconds Period seconds for startupProbe
# -- startupProbe.timeoutSeconds Timeout seconds for startupProbe
# -- startupProbe.failureThreshold Failure threshold for startupProbe
# -- startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: true
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 90
virtualService:
  annotations: {}
  objects:
    - name: change-data-capture
      pathMatchType: prefix
      pathRewrite: "/"
      paths:
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/cdc/'
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/cdc'
ingress:
  objects:
    - annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      paths:
        - path: '{{ .Values.global.ingress.pathPrefix}}/cdc(/|$)(.*)'
pms:
  ingress:
    name: change-data-capture-pms
    objects:
      - annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$2
        paths:
          - path: '{{ .Values.global.ingress.pathPrefix}}/cdc(/|$)(/sync/pipelines.*)'
            backend:
              service:
                name: change-data-capture-pms
          - path: '{{ .Values.global.ingress.pathPrefix}}/cdc(/|$)(/sync/executions.*)'
            backend:
              service:
                name: change-data-capture-pms
          - path: '{{ .Values.global.ingress.pathPrefix}}/cdc(/|$)(/sync/pipelineStageExecutions.*)'
            backend:
              service:
                name: change-data-capture-pms
          - path: '{{ .Values.global.ingress.pathPrefix}}/cdc(/|$)(/sync/stepExecutions.*)'
            backend:
              service:
                name: change-data-capture-pms
#-- Service properties
##
service:
  # -- service type
  ##
  type: ClusterIP
  ## -- service.ports application service port
  ##
  port: 8190
## Pod resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
# --resources.limits The resources limits for the containers
# --resources.requests The requested resources for the containers
##
resources:
  limits:
    memory: 2880Mi
  requests:
    cpu: 1
    memory: 2880Mi
# -- extraEnvVars Extra environment variables to be set on container
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
# -- extraEnvVarsCM ConfigMap with extra environment variables
##
# extraEnvVars:
# - name: POD_NAME
#   valueFrom:
#     fieldRef:
#       fieldPath: metadata.name
extraEnvVarsCM: ""
# -- extraEnvVarsSecret Secret with extra environment variables
##
extraEnvVarsSecret: ""
# --  extraVolumes Optionally specify extra list of additional volumes for ; pods
##
# e.g.
# extraVolumes:
# - name: service-account
#   secret:
#     secretName: redis-ca
#     items:
#     - key: redis-labs-ca-truststore
#       path: redis_labs_ca_truststore
# - name: stackdriver
#   secret:
#     secretName: stackdriver-creds
#     items:
#     - key: stackdriver-key-file
#       path: stackdriver.json
# - name: dumps
#   hostPath:
#     path: /var/dumps
#     type: DirectoryOrCreate
extraVolumes: []
# --  extraVolumeMounts Optionally specify extra list of additional volumeMounts for ; container(s)
##
# e.g.
# extraVolumeMounts:
# - name: service-account
#   mountPath: /opt/harness/svc
# - name: stackdriver
#   mountPath: /opt/harness/monitoring
# - name: dumps
#   mountPath: /opt/harness/dumps
extraVolumeMounts: []
# --initContainers Add additional init containers to the ; pods
## e.g:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []
# --sidecars Add additional sidecar containers to the ; pods
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
# --  affinity Affinity for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
# --  nodeSelector Node labels for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
# --  tolerations Tolerations for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
additionalConfigs: {}
java17flags: ""
secrets:
  default:
    SOME_DEFAULT_SECRET: "DUMMY"
  kubernetesSecrets:
    - secretName: ""
      keys:
        SOME_DEFAULT_SECRET: ""
  secretManagement:
    externalSecretsOperator:
      - secretStore:
          name: ""
          kind: ""
        remoteKeys:
          SOME_DEFAULT_SECRET:
            name: ""
            property: ""
replicaCount: 1
