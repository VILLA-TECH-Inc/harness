# Default values for ng-auth-ui
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  autoscaling:
    enabled: false
  pdb:
    create: false
  loadbalancerURL: ""
  imagePullSecrets: []
  commonAnnotations: {}
  commonLabels: {}
  ingress:
    disableHostInIngress: false
    pathPrefix: ""
    pathType: ""
    # -- create ingress objects
    enabled: false
    # -- set ingress object classname
    className: harness
    # -- set host of ingressObjects
    hosts:
      - my-host.example.org
    # -- set tls for ingress objects
    tls:
      enabled: true
      secretName: ""
    # -- add annotations to ingress objects
    objects:
      annotations: {}
  istio:
    # -- create virtualServices objects
    enabled: false
    # -- create gateway and use in virtualservice
    gateway:
      create: false
    # -- if gateway not created, use specified gateway and host
    virtualService:
      gateways:
      hosts:
replicaCount: 1
maxSurge: 1
maxUnavailable: 0
image:
  registry: docker.io
  repository: harness/ng-auth-ui-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.34.0"
  digest: "sha256:0423667fa94c3776ea62a7b809ee4a3bfb2732d308a0fa2f56cbd53c3b2f9f19"
  imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
podAnnotations: {}
podLabels: {}
imagePullSecrets: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  annotations: {}
  type: ClusterIP
  protocol: TCP
  port: 80
  targetport: 8080
virtualService:
  annotations: {}
  objects:
    - name: ng-auth-ui
      pathMatchType: prefix
      pathRewrite: "/"
      paths:
        - path: '/auth/'
ingress:
  annotations: {}
  objects:
    - annotations:
        nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      paths:
        - path: '/auth(/|$)(.*)'
containerPort: 8080
resources:
  limits:
    cpu: 0.5
    memory: 512Mi
  requests:
    cpu: 0.5
    memory: 512Mi
autoscaling:
  enabled: false
  targetCPU: 80
  targetMemory: ""
nodeSelector: {}
tolerations: []
affinity: {}
additionalConfigs: {}
config:
  DEPLOYMENT_TYPE: ON_PREM
  API_URL: /gateway
  OAUTH_SIGNUP_ENABLED: "true"
  EXPECTED_HOSTNAME: app.harness.io
secrets:
  default:
    CAPTCHA_TOKEN: ""
    INVISIBLE_CAPTCHA_TOKEN: ""
  kubernetesSecrets:
    - secretName: ""
      keys:
        CAPTCHA_TOKEN: ""
        INVISIBLE_CAPTCHA_TOKEN: ""
  secretManagement:
    externalSecretsOperator:
      - secretStore:
          name: ""
          kind: ""
        remoteKeys:
          CAPTCHA_TOKEN:
            name: ""
            property: ""
          INVISIBLE_CAPTCHA_TOKEN:
            name: ""
            property: ""
pdb:
  create: false
rbac:
  rules: []
