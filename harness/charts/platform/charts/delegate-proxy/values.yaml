# Default values for delegate-proxy
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  pdb:
    create: false
  commonAnnotations: {}
  commonLabels: {}
  kubeVersion: ""
  loadbalancerURL: ""
  imagePullSecrets: []
  useMinimalDelegateImage: false
  ingress:
    # -- create ingress objects
    enabled: false
    # -- set ingress object classname
    className: harness
    # -- set host of ingressObjects
    hosts:
      - my-host.example.org
    # -- set tls for ingress objects
    tls:
      enabled: true
      secretName: ''
    # -- add annotations to ingress objects
    objects:
      annotations: {}
  istio:
    # -- create virtualServices objects
    enabled: false
    # -- create gateway and use in virtualservice
    gateway:
      create: false
    # -- if gateway not created, use specified gateway and host
    virtualService:
      gateways:
      hosts:
replicaCount: 1
maxSurge: 1
maxUnavailable: 0
image:
  registry: docker.io
  repository: harness/delegate-proxy-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.1.1"
  digest: "sha256:4db560cdde9bf19da808253bd90f08a17a86fd3b044dd10e298870cc8a7e91c0"
  imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
podAnnotations: {}
imagePullSecrets: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  type: ClusterIP
  port: 80
  targetPort: 8080
resources:
  limits:
    memory: 100Mi
  requests:
    cpu: 200m
    memory: 100Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""
nodeSelector: {}
tolerations: []
affinity: {}
additionalConfigs: {}
extraVolumes: []
extraVolumeMounts: []
virtualService:
  annotations: {}
ingress:
  annotations: {}
config:
  proxy.conf: "server { root /www/data;proxy_http_version 1.1;\n}"
pdb:
  create: false
