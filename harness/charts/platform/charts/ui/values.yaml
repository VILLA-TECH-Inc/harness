# Default values for ui
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  kubeVersion: ""
  loadbalancerURL: ""
  airgap: false
  imagePullSecrets: []
  commonAnnotations: {}
  commonLabels: {}
  ingress:
    enabled: false
    objects:
      annotations: {}
    className: harness
    tls:
      enabled: false
      # secretName: harness-cert
    additionalPaths:
    # - path: abc
    #   pathType: ImplementationSpecific
    #     backend:
    #         service:
    #           name: release-name-ui
    #           port:
    #             number: 80
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways:
      hosts:
  waitForInitContainer:
    enabled: true
    image:
      registry: docker.io
      repository: harness/helm-init-container
      pullPolicy: Always
      tag: "latest"
      digest: "sha256:b8cb03089a08ff78bd59f9bdb29c9a0987517314e6f2245640d242345b9428dd"
      imagePullSecrets: []
replicaCount: 1
maxSurge: 1
maxUnavailable: 0
image:
  registry: docker.io
  repository: harness/ui-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.22.0"
  digest: "sha256:bc0a348ea138554474ff8b387484153e9a21882b0d288a00c28d763187c4d7d6"
  imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  annotations: {}
  type: ClusterIP
  port: 80
  targetPort: 8080
virtualService:
  annotations: {}
resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
ingress:
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /ui
          pathType: ImplementationSpecific
  tls: []
secrets:
  fileSecret: []
  default: {}
  kubernetesSecrets: {}
  secretManagement: {}
config:
  API_URL: '{{ .Values.global.loadbalancerURL }}/gateway'
  BUILD_NUMBER: '{{ .Values.image.tag }}'
  HARNESS_ENABLE_DRIFT_PLACEHOLDER: "false"
  HARNESS_ENABLE_NG_AUTH_UI_PLACEHOLDER: "true"
  CDN: "0"
# Additional configurations to be Depercated use config instead which allows
# for templating and overrides.
additionalConfigs: {}
