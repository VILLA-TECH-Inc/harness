global:
  loadbalancerURL: "https://test"
  ingress:
    bodySize: 1024m
    readTimeout: 300
    className: harness
  storageClass: ""
  storageClassName: ""
  database:
    redis:
      installed: true
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis:6379
      ssl:
        enabled: false
        secret: ""
        caFileKey: ""
        trustStoreKey: ""
        trustStorePasswordKey: ""
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
  waitForInitContainer:
    enabled: true
    image:
      registry: docker.io
      repository: harness/helm-init-container
      pullPolicy: Always
      tag: "latest"
      digest: "sha256:c06cab15920d2f99a000f913316a76cd867c73fc8d7b2e68ba4851b39e64aa97"
  imagePullSecrets: []
pvname: code-gitrpc
instances: 3
nameOverride: ""
fullnameOverride: ""
image:
  registry: docker.io
  repository: harness/code-gitrpc-signed
  pullPolicy: IfNotPresent
  tag: "1.34.0"
  digest: "sha256:74fd1ef41f136fdcef876fada7c033ef29f69ac24260a92bdc954ba8255c4d17"
  imagePullSecrets: []
waitForInitContainer:
  ## image version
  ## ref: https://hub.docker.com/r/harness/helm-init-container/tags
  # --image.registry ; image registry
  # --image.repository ; image repository 
  # --image.tag ; image tag (immutable tags are recommended)
  # --image.digest ; image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  # --image.pullPolicy Image pull policy
  # --image.imagePullSecrets Specify docker-registry secret names as an array
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: "sha256:c06cab15920d2f99a000f913316a76cd867c73fc8d7b2e68ba4851b39e64aa97"
    imagePullSecrets: []
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 500m
  containerSecurityContext:
    runAsUser: 65534
    runAsNonRoot: true
config:
  CODE_TRACE: false
  CODE_DEBUG: false
  CODE_GITRPC_SERVER_GIT_TRACE: true
  CODE_PROFILER_TYPE: "GCP"
  CODE_PROFILER_SERVICE_NAME: "code-gitrpc"
  CODE_GITRPC_PV_STORAGE: 10Gi
  mountPath: /app/data
  CODE_GIT_ROOT: "/app/data"
  CODE_SERVER_GRACEFUL_SHUTDOWN_TIME: 300
  CODE_GITRPC_SERVER_PORT: 3001
  CODE_GITRPC_SERVER_HTTP_PORT: 4001
  CODE_GITRPC_SERVER_MAX_CONN_AGE: "630720000s" # githa <> gitrpc grpc conn could be kept alive
  CODE_GITRPC_SERVER_MAX_CONN_AGE_GRACE: "630720000s"
additionalConfig:
  GITRPC_REDIS_SENTINEL_MASTER: "harness-redis"
redis:
  protocol: ""
  hosts: []
  secretName: ""
  userKey: ""
  passwordKey: ""
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""
    secretManagement:
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            REDIS_USERNAME:
              name: ""
              property: ""
            REDIS_PASSWORD:
              name: ""
              property: ""
database:
  redis:
    events:
      protocol: ""
      hosts: []
      extraArgs: ""
      ssl:
        enabled: false
        secret: ""
        caFileKey: ""
        trustStoreKey: ""
        trustStorePasswordKey: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
    code-gitrpc:
      protocol: ""
      hosts: []
      extraArgs: ""
      ssl:
        enabled: false
        secret: ""
        caFileKey: ""
        trustStoreKey: ""
        trustStorePasswordKey: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
nodeLabel:
  key: ""
  value: ""
secret:
harnessDisks:
  disks: []
resources:
  limits:
    memory: "1Gi"
  requests:
    cpu: "1024m"
    memory: "1Gi"
serviceAccount:
  create: false
  annotations: {}
  name: "harness-default"
nodeSelector: {}
tolerations: []
affinity: {}
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
additionalConfigs: {}
postgres:
  image:
    registry: docker.io
    repository: bitnami/postgresql
    pullPolicy: IfNotPresent
    tag: "14.11.0-debian-11-r17"
    digest: "sha256:2dddf267983fd5cb0c90086f8b2eddccd19e51e543c88683dfc45ab160966503"
    imagePullSecrets: []
busybox:
  image:
    registry: docker.io
    repository: busybox
    pullPolicy: IfNotPresent
    tag: "1.37.0"
    digest: "sha256:37f7b378a29ceb4c551b1b5582e27747b855bbfaa73fa11914fe0df028dc581f"
    imagePullSecrets: []
