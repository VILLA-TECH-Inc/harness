apiVersion: apps/v1
kind: Deployment
metadata:
  name: ng-dashboard-aggregator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ng-dashboard-aggregator.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  {{- end }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ng-dashboard-aggregator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonAnnotations }}
          {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      labels:
        app: ng-dashboard-aggregator
        {{- include "ng-dashboard-aggregator.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.commonLabels }}
        {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "ng-dashboard-aggregator.pullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "ng-dashboard-aggregator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 180
      containers:
      - name: ng-dashboard-aggregator
        image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        ports:
        - name: dashbrd-port
          containerPort: {{ .Values.service.port }}
          protocol: "TCP"
        {{- if .Values.terminationMessage }}
            {{- toYaml .Values.terminationMessage | nindent 8 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
          {{- include "harnesscommon.renderSecretsAsEnvironmentVariables" (dict "ctx" $) | indent 10}}
          - name: CONTAINER_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: ng-dashboard-aggregator
        {{- if .Values.lifecycleHooks }}
        lifecycle:
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
        {{- end }}
        volumeMounts:
          {{- include "harnesscommon.mountRenderedSecretsAsVolumeMounts" (dict "ctx" $) | indent 12}}
          {{- if .Values.extraVolumeMounts }}
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      {{- toYaml .Values.probes | nindent 8}}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ng-dashboard-aggregator
            topologyKey: "kubernetes.io/hostname"
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
        {{- include "harnesscommon.renderSecretsAsVolumes" (dict "ctx" $) | indent 8 }}
        {{- if .Values.extraVolumes }}
        {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}