apiVersion: batch/v1
kind: Job
metadata:
  name: ff-service-db-migrate-{{ lower ( randAlphaNum 6 ) }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ff-service.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 1
  template:
    metadata:
      {{- if or .Values.global.commonAnnotations .Values.podAnnotations }}
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonAnnotations }}
          {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if or .Values.global.commonLabels .Values.podLabels }}
      labels:
        {{- if .Values.global.commonLabels }}
          {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{ include "ff-service.pullSecrets" . | nindent 6 }}
      containers:
      - name: ff-service-db-migrate
        image: {{ include "common.images.image" (dict "imageRoot" .Values.jobs.postgres_migration.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.jobs.postgres_migration.image.pullPolicy}}
        # check if curl is install or run this command from within the image.
        # command: ["/bin/bash", "-c", "curl -sf -XPOST http://127.0.0.1:15020/quitquitquit" ]
        env:
          {{- include "harnesscommon.dbconnectionv2.timescaleEnv" (dict "ctx" $ "userVariableName" "DB_USER" "passwordVariableName" "DB_PASS" "sslModeVariableName" "SSL_MODE" "handleSSLModeDisable" true) | indent 10 }}
          {{- include "harnesscommon.dbconnectionv2.timescaleEnv" (dict "ctx" $ "userVariableName" "ANALYTICS_DB_USER" "passwordVariableName" "ANALYTICS_DB_PASS" "sslModeVariableName" "ANALYTICS_SSL_MODE" "handleSSLModeDisable" true) | indent 10 }}
          - name: DB_DRIVER
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: DB_DRIVER
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: DB_PORT
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: DB_NAME
          - name: WAIT_TIMEOUT
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: DB_MIGRATION_WAIT_TIMEOUT
      restartPolicy: Never
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ff-service-timescale-db-migrate-{{ lower ( randAlphaNum 6 ) }}
  namespace: {{ .Release.Namespace }}
  annotations:
  labels:
    {{- include "ff-service.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 1
  template:
    metadata:
      {{- if or .Values.global.commonAnnotations .Values.podAnnotations }}
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonAnnotations }}
          {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if or .Values.global.commonLabels .Values.podLabels }}
      labels:
        {{- if .Values.global.commonLabels }}
          {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{ include "ff-service.pullSecrets" . | nindent 6 }}
      containers:
      - name: ff-service-timescale-db-migrate
        image: {{ include "common.images.image" (dict "imageRoot" .Values.jobs.timescaledb_migrate.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.jobs.timescaledb_migrate.image.pullPolicy}}
        # check if curl is install or run this command from within the image.
        # command: ["/bin/bash", "-c", "curl -sf -XPOST http://127.0.0.1:15020/quitquitquit" ]
        env:
          {{- include "harnesscommon.dbconnectionv2.timescaleEnv" (dict "ctx" $ "userVariableName" "DB_USER" "passwordVariableName" "DB_PASS" "sslModeVariableName" "SSL_MODE" "handleSSLModeDisable" true) | indent 10 }}
          {{- include "harnesscommon.dbconnectionv2.timescaleEnv" (dict "ctx" $ "userVariableName" "ANALYTICS_DB_USER" "passwordVariableName" "ANALYTICS_DB_PASS" "sslModeVariableName" "ANALYTICS_SSL_MODE" "handleSSLModeDisable" true) | indent 10 }}
          - name: DB_DRIVER
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: ANALYTICS_DB_DRIVER
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: ANALYTICS_DB_HOST
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: ANALYTICS_DB_PORT
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: ANALYTICS_DB_NAME
          - name: WAIT_TIMEOUT
            valueFrom:
              configMapKeyRef:
                name: ff-service
                key: DB_MIGRATION_WAIT_TIMEOUT
      restartPolicy: Never
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
