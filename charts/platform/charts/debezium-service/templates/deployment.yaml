apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "debezium-service.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: debezium-service
    {{- include "debezium-service.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "debezium-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/credentials-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonAnnotations }}
        {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- include "harnesscommon.monitoring.annotations" . | nindent 8 }}
      labels:
        app: debezium-service
        {{- include "debezium-service.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.commonLabels }}
        {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "debezium-service.pullSecrets" . | nindent 6 }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      serviceAccountName: {{ include "debezium-service.serviceAccountName" . }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- include "harnesscommon.jfr.v1.initContainer" (dict "ctx" $) | nindent 8 }}
        {{- if .Values.terminationMessage }}
          {{- toYaml .Values.terminationMessage | nindent 10}}
        {{- end }}
        {{- if .Values.global.database.mongo.installed }}
          {{ include "harnesscommon.initContainer.waitForContainer" (dict "root" . "containerName" "wait-for-mongo" "appName" "mongodb-replicaset") | nindent 8 }}
        {{- end }}
        {{- if .Values.global.database.redis.installed }}
          {{ include "harnesscommon.initContainer.waitForContainer" (dict "root" . "containerName" "wait-for-redis" "appName" "redis-sentinel") | nindent 8 }}
        {{- end }}
        {{- if .Values.initContainers }}
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: debezium-service
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}
          {{- toYaml .Values.probes | nindent 10 }}
          {{- if .Values.terminationMessage }}
            {{- toYaml .Values.terminationMessage | nindent 10}}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.resources "context" $) | nindent 12 }}
          {{- end }}
          lifecycle: {{- include "harnesscommon.v1.renderLifecycleHooks" (dict "ctx" $) | nindent 12 }}
          ports:
          - name: http
            containerPort: {{.Values.service.port}}
            protocol: "TCP"
          {{- include "harnesscommon.monitoring.containerPort" . | nindent 10 }}
          env:
            {{- include "harnesscommon.jfr.v1.renderEnvironmentVars" (dict "ctx" $)  | indent 10 }}
            {{- include "harnesscommon.renderSecretsAsEnvironmentVariables" (dict "ctx" $) | indent 10}}
            {{- include "harnesscommon.dbv4.sslEnv" (dict "context" $ "dbType" "redis" "dbName" "events" "variableNames" ( dict "sslEnabled" "EVENTS_FRAMEWORK_REDIS_SSL_ENABLED" "sslCATrustStorePath" "EVENTS_FRAMEWORK_REDIS_SSL_CA_TRUST_STORE_PATH" "sslCATrustStorePassword" "EVENTS_FRAMEWORK_REDIS_SSL_CA_TRUST_STORE_PASSWORD")) | indent 10 }}
            {{- include "harnesscommon.dbv3.redisEnv" (dict "ctx" $ "database" "events" "userVariableName" "EVENTS_FRAMEWORK_REDIS_USERNAME" "passwordVariableName" "EVENTS_FRAMEWORK_REDIS_PASSWORD" ) | indent 10 }}
            {{- include "harnesscommon.dbv4.sslEnv" (dict "context" $ "dbType" "redis" "dbName" "lock" "variableNames" ( dict "sslEnabled" "REDIS_LOCK_CONFIG_REDIS_SSL_ENABLED" "sslCATrustStorePath" "REDIS_LOCK_CONFIG_REDIS_SSL_CA_TRUST_STORE_PATH" "sslCATrustStorePassword" "REDIS_LOCK_CONFIG_REDIS_SSL_CA_TRUST_STORE_PASSWORD")) | indent 10 }}
            {{- include "harnesscommon.dbv3.redisEnv" (dict "ctx" $ "database" "lock" "userVariableName" "REDIS_LOCK_CONFIG_REDIS_USERNAME" "passwordVariableName" "REDIS_LOCK_CONFIG_REDIS_PASSWORD" ) | indent 10 }}
            {{- if or (eq .Values.config.IS_ENABLED_PLG "true") (.Values.global.ssca.enabled) }}
            {{- include "harnesscommon.dbv3.mongoEnv" (dict "ctx" $ "database" "ng-harness") | indent 10 }}
            {{- end }}
            {{- if or (eq .Values.config.IS_ENABLED_PIPELINE "true") (eq .Values.config.IS_ENABLED_PIPELINE_SNAPSHOT "true") }}
            {{- include "harnesscommon.dbv3.mongoEnv" (dict "ctx" $ "database" "pms-harness") | indent 10 }}
            {{- end }}
            {{- if eq .Values.config.IS_ENABLED_PLG "true" }}
            {{- include "harnesscommon.dbv3.mongoConnectionEnv" (dict "ctx" $ "database" "ng-harness" "connectionURIVariableName" "MONGODB_CONNECTION_STRING_PLG") | indent 10 }}
            {{- end }}
            {{- if eq .Values.config.IS_ENABLED_PIPELINE "true" }}
            {{- include "harnesscommon.dbv3.mongoConnectionEnv" (dict "ctx" $ "database" "pms-harness" "connectionURIVariableName" "MONGODB_CONNECTION_STRING_PIPELINE") | indent 10 }}
            {{- end }}
            {{- if eq .Values.config.IS_ENABLED_PIPELINE_SNAPSHOT "true" }}
            {{- include "harnesscommon.dbv3.mongoConnectionEnv" (dict "ctx" $ "database" "pms-harness" "connectionURIVariableName" "MONGODB_CONNECTION_STRING_PIPELINE_SNAPSHOT") | indent 10 }}
            {{- end }}
            {{- if eq .Values.config.IS_ENABLED_APPLICATIONS "true" }}
            {{- include "harnesscommon.dbv3.mongoEnv" (dict "ctx" $ "database" "harness") | indent 10 }}
            {{- include "harnesscommon.dbv3.mongoConnectionEnv" (dict "ctx" $ "database" "harness" "connectionURIVariableName" "MONGODB_CONNECTION_STRING_APPLICATIONS") | indent 10 }}
            {{- end }}
            {{- if .Values.global.ssca.enabled }}
            {{- include "harnesscommon.dbv3.mongoConnectionEnv" (dict "ctx" $ "database" "ng-harness" "connectionURIVariableName" "MONGODB_CONNECTION_STRING_SSCA") | indent 10 }}
            {{- end }}
            {{- if eq .Values.config.IS_ENABLED_IDP "true" }}
            {{- include "harnesscommon.dbv3.mongoEnv" (dict "ctx" $ "database" "idp-harness") | indent 10 }}
            {{- include "harnesscommon.dbv3.mongoConnectionEnv" (dict "ctx" $ "database" "idp-harness" "connectionURIVariableName" "MONGODB_CONNECTION_STRING_IDP") | indent 10 }}
            {{- end }}
            {{- if eq .Values.config.IS_ENABLED_GITOPS "true" }}
            {{- include "harnesscommon.dbv3.mongoEnv" (dict "ctx" $ "database" "harness-gitops") | indent 10 }}
            {{- include "harnesscommon.dbv3.mongoConnectionEnv" (dict "ctx" $ "database" "harness-gitops" "connectionURIVariableName" "MONGODB_CONNECTION_STRING_GITOPS") | indent 10 }}
            {{- end }}
          envFrom:
          - configMapRef:
              name: debezium-service
              {{- if .Values.extraEnvVarsCM }}
              name: {{ include "harnesscommon.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
              {{- end }}
          {{- if .Values.extraEnvVarsSecret }}
          - secretRef:
              name: {{ include "harnesscommon.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          
          volumeMounts:
            {{- include "harnesscommon.jfr.v1.volumeMounts" (dict "ctx" $) | indent 12 }}
            {{- include "harnesscommon.mountRenderedSecretsAsVolumeMounts" (dict "ctx" $) | indent 12}}
            {{- if .Values.extraVolumeMounts }}
            {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
            {{- include "harnesscommon.dbv4.sslVolumeMount" (dict "context" $ "dbType" "redis" "dbName" "events") | nindent 12 }}
            {{- include "harnesscommon.dbv4.sslVolumeMount" (dict "context" $ "dbType" "redis" "dbName" "lock") | nindent 12 }}
        {{- if .Values.sidecars }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- include "harnesscommon.jfr.v1.volumes" (dict "ctx" $) | indent 8 }} 
        {{- include "harnesscommon.renderSecretsAsVolumes" (dict "ctx" $) | indent 8 }}
        {{- if .Values.extraVolumes }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
        {{- include "harnesscommon.dbv4.sslVolume" (dict "context" $ "dbType" "redis" "dbName" "events") | indent 8 }}
        {{- include "harnesscommon.dbv4.sslVolume" (dict "context" $ "dbType" "redis" "dbName" "lock") | indent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ include "debezium-service.name" . }}
            topologyKey: "kubernetes.io/hostname"
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
