apiVersion: v1
kind: ConfigMap
metadata:
  name: ff-pushpin-worker
  namespace: '{{ .Release.Namespace }}'
  {{- if .Values.global.commonLabels }}
  labels:
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  DEPLOY_MODE: KUBERNETES_ONPREM
  LOG_LEVEL: '{{ .Values.appLogLevel }}'
  MEMORY: '{{ .Values.memory }}m'
  EVENT_BUS: msg-broker
  MSG_BROKER_PROVIDER: redis
  # Protocol needs to be set to empty because service uses redis library which doesn't accept protocol based strings
  CACHE_PROVIDER_URLS: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $ "unsetProtocol" true) }}
  DB_DRIVER: postgres
  DB_HOST: {{ include "harnesscommon.dbconnectionv2.timescaleHost" (dict "context" $) }}
  DB_NAME: cf_db
  DB_PORT: {{ include "harnesscommon.dbconnectionv2.timescalePort" (dict "context" $) | quote }}
  MSG_BROKER_URL: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $ "unsetProtocol" true) }}
  REDIS_STREAM_MAX_LENGTH: "10000"
  REDIS_STREAM_APPROX_LENGTH: "true"
  REDIS_STREAM_VISIBILITY_TIMEOUT: 5s
  REDIS_STREAM_BLOCKING_TIMEOUT: 10s
  REDIS_STREAM_RECLAIM_INTERVAL: 5s
  REDIS_STREAM_BUFFER_SIZE: "100"
  REDIS_STREAM_CONCURRENCY: "100"
  EVENTS_FRAMEWORK_REDIS_SSL_ENABLED: "false"
  EVENTS_FRAMEWORK_USE_REDIS_PASSWORD: '{{ not .Values.global.database.redis.installed }}'
  EVENTS_FRAMEWORK_ENV_NAMESPACE: ""
  EVENTS_FRAMEWORK_REDIS_USE_SENTINEL: '{{ .Values.global.database.redis.installed }}'
  EVENTS_FRAMEWORK_REDIS_SENTINEL_MASTER: 'harness-redis'
  EVENTS_FRAMEWORK_REDIS_SENTINEL_URLS: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $ "unsetProtocol" true) }}
  {{- if .Values.additionalConfigs }}
  {{- toYaml .Values.additionalConfigs | nindent 2 }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ff-pushpin
  namespace: '{{ .Release.Namespace }}'
  {{- if .Values.global.commonLabels }}
  labels:
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  target: "ff-service:16001"
  http-port: "7998"